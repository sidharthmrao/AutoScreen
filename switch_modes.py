import osimport sysargs = sys.argv[1:]base_path = '/home/sloth/.config/hypr/monitor_configs/'def description():	return """Screen Configuration Options Manager=====================================Usage:	-h, --help: Display this message	-m, --mode: Set the mode to the given mode	-s, --switch: Switch to the next mode	-l, --list: List all available modes	-c, --current: Display the current mode	"""def get_available_modes():	try:		return [x.replace('\n', '').split(':') for x in open(base_path + '/modes', 'r').readlines()]	except FileNotFoundError:		print("No modes file found. Please create one at ~/.config/hypr/monitor_configs/modes")		exit(1)	except Exception as e:		print("Error: " + str(e))		exit(1)def get_available_mode_names():	try:		return [x[0] for x in get_available_modes()]	except KeyError:		print("Error in modes file. Please make sure it is formatted correctly.")		exit(1)	except Exception as e:		print("Error: " + str(e))		exit(1)def get_mode():	try:		return get_available_modes()[int(open(base_path+'mode', 'r+').read())][0]	except FileNotFoundError:		print("No mode file found. Please create one at ~/.config/hypr/monitor_configs/mode")		exit(1)	except KeyError:		print("Error in mode file. Please make sure it is formatted correctly.")		exit(1)	except Exception as e:		print("Error: " + str(e))		exit(1)def set_mode(name: str):	modes = {x[0]:x[1] for x in get_available_modes()}	try:		os.system(base_path+modes[name])		print("Set mode to " + name)	except KeyError:		print("Mode not found")		exit(1)	except Exception as e:		print("Error: " + str(e))		exit(1)def switch_mode():	try:		mode = get_mode()		mode_index = (get_available_mode_names().index(mode) + 1) % len(get_available_mode_names())		set_mode(get_available_mode_names()[mode_index])	except Exception as e:		print("Error: " + str(e))		exit(1)if not len(args) or args[0] in ['-h', '--help']:	print(description())elif args[0] in ["-m", "--mode"]:	if len(args) < 2:		print("No mode specified")		print(description())	set_mode(args[1])elif args[0] in ["-s", "--switch"]:	switch_mode()elif args[0] in ["-l", "--list"]:	print("Available Modes:")	for mode in get_available_mode_names():		print(mode)elif args[0] in ["-c", "--current"]:	print("Current Mode: " + get_mode())else:	print("Invalid argument: " + args[0])	print(description())